// Generated by gencpp from file camera/message.msg
// DO NOT EDIT!


#ifndef CAMERA_MESSAGE_MESSAGE_H
#define CAMERA_MESSAGE_MESSAGE_H

#include <ros/service_traits.h>


#include <camera/messageRequest.h>
#include <camera/messageResponse.h>


namespace camera
{

struct message
{

typedef messageRequest Request;
typedef messageResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct message
} // namespace camera


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::camera::message > {
  static const char* value()
  {
    return "b9d1c9fee0054923e6d8acbb284d7b0b";
  }

  static const char* value(const ::camera::message&) { return value(); }
};

template<>
struct DataType< ::camera::message > {
  static const char* value()
  {
    return "camera/message";
  }

  static const char* value(const ::camera::message&) { return value(); }
};


// service_traits::MD5Sum< ::camera::messageRequest> should match
// service_traits::MD5Sum< ::camera::message >
template<>
struct MD5Sum< ::camera::messageRequest>
{
  static const char* value()
  {
    return MD5Sum< ::camera::message >::value();
  }
  static const char* value(const ::camera::messageRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::camera::messageRequest> should match
// service_traits::DataType< ::camera::message >
template<>
struct DataType< ::camera::messageRequest>
{
  static const char* value()
  {
    return DataType< ::camera::message >::value();
  }
  static const char* value(const ::camera::messageRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::camera::messageResponse> should match
// service_traits::MD5Sum< ::camera::message >
template<>
struct MD5Sum< ::camera::messageResponse>
{
  static const char* value()
  {
    return MD5Sum< ::camera::message >::value();
  }
  static const char* value(const ::camera::messageResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::camera::messageResponse> should match
// service_traits::DataType< ::camera::message >
template<>
struct DataType< ::camera::messageResponse>
{
  static const char* value()
  {
    return DataType< ::camera::message >::value();
  }
  static const char* value(const ::camera::messageResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAMERA_MESSAGE_MESSAGE_H
